{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Resource": "*",
      "Action": [
        "healthlake:ReadResource",
        "healthlake:Get*",
        "healthlake:List*",
        "healthlake:Describe*",
        "honeycode:Get*",
        "honeycode:List*",
        "honeycode:Describe*",
        "iam:GenerateCredentialReport",
        "iam:SimulateCustomPolicy",
        "iam:SimulatePrincipalPolicy",
        "iam:Get*",
        "iam:List*",
        "iam:Describe*",
        "identity-sync:Get*",
        "identity-sync:List*",
        "identity-sync:Describe*",
        "identitystore-auth:Get*",
        "identitystore-auth:List*",
        "identitystore-auth:Describe*",
        "identitystore:Get*",
        "identitystore:List*",
        "identitystore:Describe*",
        "imagebuilder:Get*",
        "imagebuilder:List*",
        "imagebuilder:Describe*",
        "importexport:Get*",
        "importexport:List*",
        "importexport:Describe*",
        "inspector2:Get*",
        "inspector2:List*",
        "inspector2:Describe*",
        "inspector:Get*",
        "inspector:List*",
        "inspector:Describe*",
        "internetmonitor:Get*",
        "internetmonitor:List*",
        "internetmonitor:Describe*",
        "invoicing:Get*",
        "invoicing:List*",
        "invoicing:Describe*",
        "iot-device-tester:SupportedVersion",
        "iot-device-tester:Get*",
        "iot-device-tester:List*",
        "iot-device-tester:Describe*",
        "iot1click:Get*",
        "iot1click:List*",
        "iot1click:Describe*",
        "iot:Get*",
        "iot:List*",
        "iot:Describe*",
        "iotanalytics:Get*",
        "iotanalytics:List*",
        "iotanalytics:Describe*",
        "iotdeviceadvisor:Get*",
        "iotdeviceadvisor:List*",
        "iotdeviceadvisor:Describe*",
        "iotevents:Get*",
        "iotevents:List*",
        "iotevents:Describe*",
        "iotfleethub:Get*",
        "iotfleethub:List*",
        "iotfleethub:Describe*",
        "iotfleetwise:Get*",
        "iotfleetwise:List*",
        "iotfleetwise:Describe*",
        "iotjobsdata:Get*",
        "iotjobsdata:List*",
        "iotjobsdata:Describe*",
        "iotroborunner:Get*",
        "iotroborunner:List*",
        "iotroborunner:Describe*",
        "iotsitewise:Get*",
        "iotsitewise:List*",
        "iotsitewise:Describe*",
        "iottwinmaker:Get*",
        "iottwinmaker:List*",
        "iottwinmaker:Describe*",
        "iotwireless:Get*",
        "iotwireless:List*",
        "iotwireless:Describe*",
        "kafka-cluster:Get*",
        "kafka-cluster:List*",
        "kafka-cluster:Describe*",
        "kafka:Get*",
        "kafka:List*",
        "kafka:Describe*",
        "kafkaconnect:Get*",
        "kafkaconnect:List*",
        "kafkaconnect:Describe*",
        "kendra-ranking:Get*",
        "kendra-ranking:List*",
        "kendra-ranking:Describe*",
        "kendra:Get*",
        "kendra:List*",
        "kendra:Describe*",
        "kinesis:List*",
        "kinesis:Describe*",
        "kinesisanalytics:Get*",
        "kinesisanalytics:List*",
        "kinesisanalytics:Describe*",
        "kinesisvideo:Get*",
        "kinesisvideo:List*",
        "kinesisvideo:Describe*",
        "kms:Get*",
        "kms:List*",
        "kms:Describe*",
        "lakeformation:Get*",
        "lakeformation:List*",
        "lakeformation:Describe*",
        "lambda:Get*",
        "lambda:List*",
        "lambda:Describe*",
        "launchwizard:Get*",
        "launchwizard:List*",
        "launchwizard:Describe*",
        "lex:Get*",
        "lex:List*",
        "lex:Describe*",
        "license-manager-linux-subscriptions:Get*",
        "license-manager-linux-subscriptions:List*",
        "license-manager-linux-subscriptions:Describe*",
        "license-manager-user-subscriptions:Get*",
        "license-manager-user-subscriptions:List*",
        "license-manager-user-subscriptions:Describe*",
        "license-manager:Get*",
        "license-manager:List*",
        "license-manager:Describe*",
        "lightsail:IsVpcPeered",
        "lightsail:Get*",
        "lightsail:List*",
        "lightsail:Describe*",
        "logs:Get*",
        "logs:List*",
        "logs:Describe*",
        "lookoutequipment:Get*",
        "lookoutequipment:List*",
        "lookoutequipment:Describe*",
        "lookoutmetrics:Get*",
        "lookoutmetrics:List*",
        "lookoutmetrics:Describe*",
        "lookoutvision:Get*",
        "lookoutvision:List*",
        "lookoutvision:Describe*",
        "m2:Get*",
        "m2:List*",
        "m2:Describe*",
        "machinelearning:Get*",
        "machinelearning:List*",
        "machinelearning:Describe*",
        "macie2:Get*",
        "macie2:List*",
        "macie2:Describe*",
        "mapcredits:Get*",
        "mapcredits:List*",
        "mapcredits:Describe*",
        "marketplacecommerceanalytics:Get*",
        "marketplacecommerceanalytics:List*",
        "marketplacecommerceanalytics:Describe*",
        "mechanicalturk:Get*",
        "mechanicalturk:List*",
        "mechanicalturk:Describe*",
        "mediaconnect:Get*",
        "mediaconnect:List*",
        "mediaconnect:Describe*",
        "mediaconvert:Get*",
        "mediaconvert:List*",
        "mediaconvert:Describe*",
        "mediaimport:Get*",
        "mediaimport:List*",
        "mediaimport:Describe*",
        "medialive:Get*",
        "medialive:List*",
        "medialive:Describe*",
        "mediapackage-vod:Get*",
        "mediapackage-vod:List*",
        "mediapackage-vod:Describe*",
        "mediapackage:Get*",
        "mediapackage:List*",
        "mediapackage:Describe*",
        "mediapackagev2:Get*",
        "mediapackagev2:List*",
        "mediapackagev2:Describe*",
        "mediastore:Get*",
        "mediastore:List*",
        "mediastore:Describe*",
        "mediatailor:Get*",
        "mediatailor:List*",
        "mediatailor:Describe*",
        "medical-imaging:Get*",
        "medical-imaging:List*",
        "medical-imaging:Describe*",
        "memorydb:Get*",
        "memorydb:List*",
        "memorydb:Describe*",
        "mgh:Get*",
        "mgh:List*",
        "mgh:Describe*",
        "mgn:Get*",
        "mgn:List*",
        "mgn:Describe*",
        "migrationhub-orchestrator:Get*",
        "migrationhub-orchestrator:List*",
        "migrationhub-orchestrator:Describe*",
        "migrationhub-strategy:Get*",
        "migrationhub-strategy:List*",
        "migrationhub-strategy:Describe*",
        "mobileanalytics:Get*",
        "mobileanalytics:List*",
        "mobileanalytics:Describe*",
        "mobiletargeting:Get*",
        "mobiletargeting:List*",
        "mobiletargeting:Describe*",
        "monitron:Get*",
        "monitron:List*",
        "monitron:Describe*",
        "mq:Get*",
        "mq:List*",
        "mq:Describe*",
        "neptune-db:Get*",
        "neptune-db:List*",
        "neptune-db:Describe*",
        "network-firewall:Get*",
        "network-firewall:List*",
        "network-firewall:Describe*",
        "networkmanager:Get*",
        "networkmanager:List*",
        "networkmanager:Describe*",
        "nimble:Get*",
        "nimble:List*",
        "nimble:Describe*"
      ]
    },
    {
      "Effect": "Deny",
      "Resource": "*",
      "Action": [
        "internetmonitor:GetQueryResults",
        "internetmonitor:GetQueryStatus",
        "kendra:GetQuerySuggestions",
        "kinesis:GetShardIterator",
        "kms:GetParametersForImport",
        "lakeformation:GetQueryState",
        "lakeformation:GetQueryStatistics",
        "lakeformation:GetTableObjects",
        "lightsail:GetInstanceAccessDetails",
        "lightsail:GetRelationalDatabaseMasterUserPassword",
        "logs:GetQueryResults",
        "mediapackagev2:GetObject",
        "mediastore:GetObject",
        "monitron:ListProjectAdminUsers",
        "neptune-db:GetQueryStatus"
      ]
    }
  ]
}