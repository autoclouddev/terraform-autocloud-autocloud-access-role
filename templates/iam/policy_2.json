{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Resource": "*",
      "Action": [
        "ec2messages:Get*",
        "ecr-public:List*",
        "ecr-public:Describe*",
        "ecr-public:Get*",
        "ecr:List*",
        "ecr:Describe*",
        "ecr:Get*",
        "ecs:List*",
        "ecs:Describe*",
        "ecs:Get*",
        "eks:List*",
        "eks:Describe*",
        "elastic-inference:Describe*",
        "elastic-inference:List*",
        "elasticache:List*",
        "elasticache:Describe*",
        "elasticbeanstalk:List*",
        "elasticbeanstalk:Describe*",
        "elasticfilesystem:List*",
        "elasticfilesystem:Describe*",
        "elasticloadbalancing:Describe*",
        "elasticmapreduce:Describe*",
        "elasticmapreduce:Get*",
        "elasticmapreduce:List*",
        "elastictranscoder:ReadPipeline",
        "elastictranscoder:List*",
        "elastictranscoder:ReadJob",
        "elastictranscoder:ReadPreset",
        "elemental-activations:List*",
        "elemental-activations:Get*",
        "elemental-appliances-software:Get*",
        "elemental-appliances-software:List*",
        "elemental-support-cases:Get*",
        "emr-containers:List*",
        "emr-containers:Describe*",
        "emr-serverless:Get*",
        "emr-serverless:List*",
        "entityresolution:Get*",
        "entityresolution:List*",
        "es:Describe*",
        "es:Get*",
        "es:List*",
        "events:List*",
        "events:Describe*",
        "evidently:List*",
        "evidently:Get*",
        "finspace-api:Get*",
        "finspace:List*",
        "finspace:Get*",
        "firehose:Describe*",
        "firehose:List*",
        "fis:List*",
        "fis:Get*",
        "fms:List*",
        "fms:Get*",
        "forecast:List*",
        "forecast:Describe*",
        "forecast:Get*",
        "frauddetector:List*",
        "frauddetector:Describe*",
        "frauddetector:Get*",
        "freertos:List*",
        "freertos:Describe*",
        "freertos:Get*",
        "freetier:Get*",
        "fsx:List*",
        "fsx:Describe*",
        "gamelift:Describe*",
        "gamelift:Get*",
        "gamelift:List*",
        "gamesparks:List*",
        "gamesparks:Get*",
        "glacier:List*",
        "glacier:Describe*",
        "glacier:Get*",
        "globalaccelerator:List*",
        "globalaccelerator:Describe*",
        "glue:Get*",
        "glue:List*",
        "grafana:List*",
        "grafana:Describe*",
        "greengrass:Describe*",
        "greengrass:Get*",
        "greengrass:List*",
        "groundtruthlabeling:Describe*",
        "groundtruthlabeling:List*",
        "guardduty:List*",
        "guardduty:Describe*",
        "guardduty:Get*",
        "health:Describe*",
        "healthlake:List*",
        "healthlake:Describe*",
        "healthlake:Get*",
        "healthlake:ReadResource",
        "honeycode:List*",
        "honeycode:Describe*",
        "honeycode:Get*",
        "iam:Get*",
        "iam:SimulatePrincipalPolicy",
        "iam:SimulateCustomPolicy",
        "iam:List*",
        "iam:GenerateCredentialReport",
        "identity-sync:Get*",
        "identity-sync:List*",
        "identitystore-auth:List*",
        "identitystore:List*",
        "identitystore:Describe*",
        "identitystore:Get*",
        "imagebuilder:List*",
        "imagebuilder:Get*",
        "importexport:Get*",
        "importexport:List*",
        "inspector2:List*",
        "inspector2:Describe*",
        "inspector2:Get*",
        "inspector:List*",
        "inspector:Describe*",
        "inspector:Get*",
        "internetmonitor:Get*",
        "internetmonitor:List*",
        "invoicing:Get*",
        "invoicing:List*",
        "iot-device-tester:SupportedVersion",
        "iot1click:List*",
        "iot1click:Describe*",
        "iot1click:Get*",
        "iot:Describe*",
        "iot:Get*",
        "iot:List*",
        "iotanalytics:List*",
        "iotanalytics:Describe*",
        "iotanalytics:Get*",
        "iotdeviceadvisor:Get*",
        "iotdeviceadvisor:List*",
        "iotevents:List*",
        "iotevents:Describe*",
        "iotevents:Get*",
        "iotfleethub:Describe*",
        "iotfleethub:List*",
        "iotfleetwise:List*",
        "iotfleetwise:Get*",
        "iotjobsdata:Describe*",
        "iotjobsdata:Get*",
        "iotroborunner:List*",
        "iotroborunner:Get*",
        "iotsitewise:List*",
        "iotsitewise:Describe*",
        "iotsitewise:Get*",
        "iottwinmaker:List*",
        "iottwinmaker:Get*",
        "iotwireless:Get*",
        "iotwireless:List*",
        "kafka-cluster:Describe*",
        "kafka:List*",
        "kafka:Describe*",
        "kafka:Get*",
        "kafkaconnect:Describe*",
        "kafkaconnect:List*",
        "kendra-ranking:Describe*",
        "kendra-ranking:List*",
        "kendra:List*",
        "kendra:Describe*",
        "kendra:Get*",
        "kinesis:List*",
        "kinesis:Describe*",
        "kinesisanalytics:List*",
        "kinesisanalytics:Describe*",
        "kinesisanalytics:Get*",
        "kinesisvideo:List*",
        "kinesisvideo:Describe*",
        "kinesisvideo:Get*",
        "kms:List*",
        "kms:Describe*",
        "kms:Get*",
        "lakeformation:List*",
        "lakeformation:Describe*",
        "lakeformation:Get*",
        "lambda:List*",
        "lambda:Get*",
        "launchwizard:List*",
        "launchwizard:Describe*",
        "launchwizard:Get*",
        "lex:Describe*",
        "lex:Get*",
        "lex:List*",
        "license-manager-linux-subscriptions:Get*",
        "license-manager-linux-subscriptions:List*",
        "license-manager-user-subscriptions:List*",
        "license-manager:List*",
        "license-manager:Get*",
        "lightsail:IsVpcPeered",
        "lightsail:Get*",
        "logs:List*",
        "logs:Describe*",
        "logs:Get*",
        "lookoutequipment:List*",
        "lookoutequipment:Describe*",
        "lookoutmetrics:List*",
        "lookoutmetrics:Describe*",
        "lookoutmetrics:Get*",
        "lookoutvision:List*",
        "lookoutvision:Describe*",
        "m2:List*",
        "m2:Get*",
        "machinelearning:Describe*",
        "machinelearning:Get*",
        "macie2:Describe*",
        "macie2:Get*",
        "macie2:List*",
        "mapcredits:List*",
        "mechanicalturk:List*",
        "mechanicalturk:Get*",
        "mediaconnect:List*",
        "mediaconnect:Describe*",
        "mediaconvert:List*",
        "mediaconvert:Describe*",
        "mediaconvert:Get*",
        "medialive:List*",
        "medialive:Describe*",
        "mediapackage-vod:Describe*",
        "mediapackage-vod:List*",
        "mediapackage:List*",
        "mediapackage:Describe*",
        "mediapackagev2:List*",
        "mediapackagev2:Get*",
        "mediastore:List*",
        "mediastore:Describe*",
        "mediastore:Get*"
      ]
    },
    {
      "Effect": "Deny",
      "Resource": "*",
      "Action": [
        "ecr-public:GetAuthorizationToken",
        "ecr:GetAuthorizationToken",
        "elasticmapreduce:GetClusterSessionCredentials",
        "elasticmapreduce:GetPersistentAppUIPresignedURL",
        "elasticmapreduce:GetOnClusterAppUIPresignedURL",
        "entityresolution:GetSchemaMapping",
        "gamelift:GetInstanceAccess",
        "glacier:GetJobOutput",
        "glue:GetSchemaVersion",
        "glue:GetTable",
        "glue:GetSchemaVersionsDiff",
        "glue:GetTableVersions",
        "glue:GetSchema",
        "glue:GetTables",
        "glue:GetSchemaByDefinition",
        "glue:GetTableVersion",
        "internetmonitor:GetQueryStatus",
        "internetmonitor:GetQueryResults",
        "kendra:GetQuerySuggestions",
        "kms:GetParametersForImport",
        "lakeformation:GetTableObjects",
        "lakeformation:GetQueryState",
        "lakeformation:GetQueryStatistics",
        "lightsail:GetRelationalDatabaseMasterUserPassword",
        "lightsail:GetInstanceAccessDetails",
        "logs:GetQueryResults",
        "mediapackagev2:GetObject",
        "mediastore:GetObject"
      ]
    }
  ]
}